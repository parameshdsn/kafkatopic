variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '62460c86-24b3-486b-a27d-0989ae9587f8'
  
  # Resource groups
  Resource groups: 'POC'

  # Virtual machine
  Virtual machine: 'kafkaVM'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: KafkaApiTaskCreate
    displayName: KAfka Api Update and Delete
    pool:
      vmImage: $(vmImageName)
    
-   steps:
    - task: Created topic "testTopic"
 	apiVersion: batch/v1
	kind: Job
	metadata:
  	  name: topic-create-event-kube
  	  namespace: kafka
	spec:
  	  template:
    	    spec:
     	     containers:
      - name: topic-create
        image: solsson/kafka:2.1.0@sha256:ac3f06d87d45c7be727863f31e79fbfdcb9c610b51ba9cf03c75a95d602f15e1
        command:
        - ./bin/kafka-topics.sh
        - --zookeeper
        -   zookeeper.kafka.svc.cluster.local:2181
        - --create
        - --if-not-exists
        - --topic
        -   ops.kube-events.stream.json
        - --partitions
        -   "12"
        - --replication-factor
        -   "2"
        restartPolicy: Never   
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: 'development'
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: '
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
